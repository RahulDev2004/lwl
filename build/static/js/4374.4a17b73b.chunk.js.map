{"version":3,"file":"static/js/4374.4a17b73b.chunk.js","mappings":"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","sources":["Components/Portfolio/PortfolioScattered.jsx","Pages/Portfolios/PortfolioScattered.jsx","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import React, { memo } from 'react'\r\n\r\n// Libraries\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { PropTypes } from \"prop-types\";\r\nimport { m } from \"framer-motion\";\r\n\r\n// Data\r\nimport { PortfolioOverlayData } from './PortfolioData'\r\n\r\nconst PortfolioScattered = (props) => {\r\n    return (\r\n        <Row className={`${props.grid ? ` ${props.grid}` : \"\"}${props.className ? ` ${props.className}` : \"\"}`}>\r\n            {\r\n                props.data.map((item, i) => {\r\n                    return (\r\n                        <Col key={i} className=\"xs:px-[15px]\">\r\n                            <Link aria-label=\"link\" target={props.target} to={item.link}>\r\n                                <m.div\r\n                                    className=\"overflow-hidden portfolio-box\"\r\n                                    initial={{ opacity: 0 }}\r\n                                    whileInView={{ opacity: 1 }}\r\n                                    viewport={{ once: true }}\r\n                                    transition={{ duration: 0.6, ease: \"easeOut\" }}\r\n                                >\r\n                                    <div className='portfolio-image inline-block relative'>\r\n                                        {item.img && <img className=\"w-full\" src={item.img} height={261} width={380} alt=\"portfolio-scattered\" />}\r\n                                    </div>\r\n                                    <div className=\"portfolio-hover pt-[20px] text-left\">\r\n                                        {item.title && <h3 className=\"heading-6 font-serif text-darkgray text-base font-medium block m-0\">{item.title}</h3>}\r\n                                        {item.subtitle && <span className=\"text-spanishgray block text-md\">{item.subtitle}</span>}\r\n                                    </div>\r\n                                </m.div>\r\n                            </Link>\r\n                        </Col>\r\n                    )\r\n                })\r\n            }\r\n        </Row>\r\n    )\r\n}\r\n\r\nPortfolioScattered.defaultProps = {\r\n    data: PortfolioOverlayData,\r\n}\r\n\r\nPortfolioScattered.propTypes = {\r\n    grid: PropTypes.string,\r\n    target: PropTypes.string,\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            subtitle: PropTypes.string,\r\n            title: PropTypes.string,\r\n            img: PropTypes.string,\r\n            category: PropTypes.array,\r\n            link: PropTypes.string,\r\n            double_col: PropTypes.bool\r\n        })\r\n    )\r\n}\r\n\r\nexport default memo(PortfolioScattered)","import React from 'react'\r\n\r\n// Libraries\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { Parallax } from \"react-scroll-parallax\";\r\n\r\n// Components\r\nimport PortfolioScattered from '../../Components/Portfolio/PortfolioScattered'\r\n\r\n// Data\r\nimport { portfolioScatteredData } from '../../Components/Portfolio/PortfolioData'\r\n\r\nconst PortfolioScatteredPage = (props) => {\r\n    return (\r\n        <div style={props.style}>\r\n            {/* Parallax Section Start */}\r\n            <div className=\"h-[450px] sm:h-[350px] overflow-hidden md:relative\">\r\n                <Parallax className=\"lg-no-parallax bg-cover absolute top-[0] md:top-[-66px] xs:top-[-80px] md:h-[550px] left-0 w-full h-full\" translateY={[-40, 40]} style={{ backgroundImage: `url(/assets/img/webp/portfolio-bg.webp)` }}></Parallax>\r\n                <Container className=\"h-full relative flex justify-center items-center\">\r\n                    <Row className=\"justify-center h-full w-full xs:h-[70%]\">\r\n                        <Col xl={6} lg={6} sm={8} className=\"text-center flex justify-center flex-col font-serif w-full\">\r\n                            <h1 className=\"text-gradient bg-gradient-to-r from-[#556fff] via-[#e05fc4] to-[#ff798e] mb-[15px] inline-block text-xmd\">Portfolio scattered masonry column</h1>\r\n                            <h2 className=\"text-darkgray font-medium -tracking-[1px] mb-0\">Portfolio scattered</h2>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            {/* Parallax Section End */}\r\n\r\n            <section className=\"pt-0 px-[7%] pb-[130px] lg:pb-[90px] md:pb-[75px] sm:pb-[50px] relative md:px-[3%] sm:px-0 lg:py-[90px] md:py-[75px] sm:py-[50px]\">\r\n                <Container fluid>\r\n                    <PortfolioScattered grid=\"row row-cols-1 row-cols-xl-4 row-cols-lg-2 row-cols-md-2 portfolio-scattered\" data={portfolioScatteredData} />\r\n                </Container>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PortfolioScatteredPage","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nvar useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["PortfolioScattered","props","_jsx","Row","className","concat","grid","children","data","map","item","i","Col","Link","target","to","link","_jsxs","m","div","initial","opacity","whileInView","viewport","once","transition","duration","ease","img","src","height","width","alt","title","subtitle","defaultProps","PortfolioOverlayData","memo","style","Parallax","translateY","backgroundImage","Container","xl","lg","sm","fluid","portfolioScatteredData","React","_ref","ref","bsPrefix","as","Component","prefix","useBootstrapPrefix","suffix","classNames","displayName","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect"],"sourceRoot":""}