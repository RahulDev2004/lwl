{"version":3,"file":"static/js/8639.cadb3dd4.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/AlertHeading.js","../node_modules/react-bootstrap/esm/AlertLink.js","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs"],"sourcesContent":["import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture = false) {\n  const handler = useEventCallback(listener);\n  useEffect(() => {\n    const target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return () => target.removeEventListener(event, handler, capture);\n  }, [eventTarget]);\n}","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-heading');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertHeading.displayName = 'AlertHeading';\nexport default AlertHeading;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AlertLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertLink.displayName = 'AlertLink';\nexport default AlertLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AlertHeading from './AlertHeading';\nimport AlertLink from './AlertLink';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show = true,\n    closeLabel = 'Close alert',\n    closeVariant,\n    className,\n    children,\n    variant = 'primary',\n    onClose,\n    dismissible,\n    transition = Fade,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    var isMounted = useRef(false);\n    useIsomorphicLayoutEffect(function () {\n        isMounted.current = true;\n        return function () {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import { __values } from 'tslib';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useId } from '../../utils/use-id.mjs';\n\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useId();\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            var e_1, _a;\n            presenceChildren.set(childId, true);\n            try {\n                for (var _b = __values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var isComplete = _c.value;\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete();\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __read, __spreadArray } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { env } from '../../utils/process.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\n\nvar getChildKey = function (child) { return child.key || \"\"; };\nfunction updateChildLookup(children, allChildren) {\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var _d = __read(useForceUpdate(), 1), forceRender = _d[0];\n    var forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    var isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    var childrenToRender = filteredChildren;\n    var exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    var isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(function () {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(function () {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = __spreadArray([], __read(childrenToRender), false);\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    if (env !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport sync from 'framesync';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    var isMounted = useIsMounted();\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    var forceRender = useCallback(function () {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    var deferredForceRender = useCallback(function () { return sync.postRender(forceRender); }, [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n"],"names":["useCallbackRef","useState","useEventListener","eventTarget","event","listener","capture","arguments","length","undefined","handler","useEventCallback","useEffect","target","addEventListener","removeEventListener","WeakMap","_excluded","Anchor","React","_ref","ref","onKeyDown","props","source","excluded","key","i","sourceKeys","Object","keys","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","assign","tagName","handleKeyDown","e","href","trim","role","_jsx","displayName","DivStyledAsH4","divWithClassName","AlertHeading","className","bsPrefix","as","Component","useBootstrapPrefix","classNames","AlertLink","Alert","uncontrolledProps","show","closeLabel","closeVariant","children","variant","onClose","dismissible","transition","Fade","useUncontrolled","prefix","handleClose","Transition","alert","_jsxs","concat","CloseButton","onClick","unmountOnExit","in","Link","Heading","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PresenceChild","_a","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","id","useId","context","useMemo","childId","e_1","set","_b","__values","values","_c","next","done","value","e_1_1","error","return","call","register","delete","forEach","_","size","PresenceContext","Provider","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","_d","__read","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","postRender","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","useUnmountEffect","clear","map","__spreadArray","presentKeys","targetKeys","numPresent","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","env","console","warn","cloneElement"],"sourceRoot":""}